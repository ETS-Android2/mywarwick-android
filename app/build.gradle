apply plugin: 'com.android.application'

if (!project.hasProperty("MyWarwick.keystore")) {
    throw new InvalidUserDataException("~/.gradle/gradle.properties needs to contain the necessary MyWarwick.* properties.");
}

def buildNumber = 29
def buildVersionSuffix = " - Beta build"

android {
    signingConfigs {
        myWarwickPlay {
            keyAlias project.property("MyWarwick.keyAlias")
            keyPassword project.property("MyWarwick.keyPass")
            storeFile file(project.property("MyWarwick.keystore"))
            storePassword project.property("MyWarwick.keyPass")
        }
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "uk.ac.warwick.my.app"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode buildNumber
        versionName buildNumber + buildVersionSuffix
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myWarwickPlay
            resValue "string", "app_name", "My Warwick"
            resValue "string", "package_name", android.defaultConfig.applicationId
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "My Warwick dev"
            resValue "string", "package_name", android.defaultConfig.applicationId + applicationIdSuffix
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'

    compile 'com.roughike:bottom-bar:2.3.1'
    compile 'com.google.guava:guava:20.0'

    compile 'com.google.firebase:firebase-messaging:10.2.0'
    compile 'com.google.firebase:firebase-crash:10.2.0'

    compile 'com.github.apl-devs:appintro:v4.2.0'

    androidTestCompile 'com.android.support.test.espresso:espresso-web:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

task archiveProguardMapping(type: Sync) {
    from 'build/outputs/mapping/release'
    into "artifacts/build-${buildNumber}/mapping"
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn archiveProguardMapping
    }

    if (task.name == 'transformClassesAndResourcesWithProguardForRelease') {
        archiveProguardMapping.mustRunAfter task
    }
}

apply plugin: 'com.google.gms.google-services'

//region: Fix shortcuts.xml by manually replacing @string/package_name

// It should work without this using the package_name string added in the buildTypes
// but Google need to sort that out. This whole thing can be removed if they do

final String PACKAGE_NAME_STRING_RES_KEY = "package_name"

android.applicationVariants.all { variant ->

    // Manually replace @string/package_name with `variant.applicationId`
    variant.mergeResources.doLast {
        println("variant = ${variant.applicationId}")

        final File valuesFile = file("${buildDir}/intermediates/res/merged/${variant.dirName}/xml-v25/shortcuts.xml")
        final String content = valuesFile.getText('UTF-8')
        final String updatedContent = content
                .replace("@string/${PACKAGE_NAME_STRING_RES_KEY}", variant.applicationId)

        valuesFile.write(updatedContent, 'UTF-8')
    }
}

//endregion